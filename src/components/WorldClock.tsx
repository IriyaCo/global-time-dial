import { useState, useEffect } from 'react';
import { SearchBar } from './SearchBar';
import { TimeCard } from './TimeCard';

export interface TimeZoneData {
  city: string;
  country: string;
  timezone: string;
  flag: string;
}

// Extensive list of world capitals and major cities
const WORLD_CITIES: TimeZoneData[] = [
  // Europe
  { city: '–ú–æ—Å–∫–≤–∞', country: '–†–æ—Å—Å–∏—è', timezone: 'Europe/Moscow', flag: 'üá∑üá∫' },
  { city: '–õ–æ–Ω–¥–æ–Ω', country: '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è', timezone: 'Europe/London', flag: 'üá¨üáß' },
  { city: '–ü–∞—Ä–∏–∂', country: '–§—Ä–∞–Ω—Ü–∏—è', timezone: 'Europe/Paris', flag: 'üá´üá∑' },
  { city: '–ë–µ—Ä–ª–∏–Ω', country: '–ì–µ—Ä–º–∞–Ω–∏—è', timezone: 'Europe/Berlin', flag: 'üá©üá™' },
  { city: '–ú–∞–¥—Ä–∏–¥', country: '–ò—Å–ø–∞–Ω–∏—è', timezone: 'Europe/Madrid', flag: 'üá™üá∏' },
  { city: '–†–∏–º', country: '–ò—Ç–∞–ª–∏—è', timezone: 'Europe/Rome', flag: 'üáÆüáπ' },
  { city: '–ê–º—Å—Ç–µ—Ä–¥–∞–º', country: '–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã', timezone: 'Europe/Amsterdam', flag: 'üá≥üá±' },
  { city: '–°—Ç–æ–∫–≥–æ–ª—å–º', country: '–®–≤–µ—Ü–∏—è', timezone: 'Europe/Stockholm', flag: 'üá∏üá™' },
  { city: '–í–∞—Ä—à–∞–≤–∞', country: '–ü–æ–ª—å—à–∞', timezone: 'Europe/Warsaw', flag: 'üáµüá±' },
  { city: '–ü—Ä–∞–≥–∞', country: '–ß–µ—Ö–∏—è', timezone: 'Europe/Prague', flag: 'üá®üáø' },
  
  // Asia
  { city: '–¢–æ–∫–∏–æ', country: '–Ø–ø–æ–Ω–∏—è', timezone: 'Asia/Tokyo', flag: 'üáØüáµ' },
  { city: '–ü–µ–∫–∏–Ω', country: '–ö–∏—Ç–∞–π', timezone: 'Asia/Shanghai', flag: 'üá®üá≥' },
  { city: '–°–µ—É–ª', country: '–Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è', timezone: 'Asia/Seoul', flag: 'üá∞üá∑' },
  { city: '–ú—É–º–±–∞–∏', country: '–ò–Ω–¥–∏—è', timezone: 'Asia/Kolkata', flag: 'üáÆüá≥' },
  { city: '–î—É–±–∞–π', country: '–û–ê–≠', timezone: 'Asia/Dubai', flag: 'üá¶üá™' },
  { city: '–ë–∞–Ω–≥–∫–æ–∫', country: '–¢–∞–∏–ª–∞–Ω–¥', timezone: 'Asia/Bangkok', flag: 'üáπüá≠' },
  { city: '–°–∏–Ω–≥–∞–ø—É—Ä', country: '–°–∏–Ω–≥–∞–ø—É—Ä', timezone: 'Asia/Singapore', flag: 'üá∏üá¨' },
  { city: '–ì–æ–Ω–∫–æ–Ω–≥', country: '–ì–æ–Ω–∫–æ–Ω–≥', timezone: 'Asia/Hong_Kong', flag: 'üá≠üá∞' },
  { city: '–ê–ª–º–∞—Ç—ã', country: '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω', timezone: 'Asia/Almaty', flag: 'üá∞üáø' },
  { city: '–¢–∞—à–∫–µ–Ω—Ç', country: '–£–∑–±–µ–∫istan', timezone: 'Asia/Tashkent', flag: 'üá∫üáø' },
  
  // Americas
  { city: '–ù—å—é-–ô–æ—Ä–∫', country: '–°–®–ê', timezone: 'America/New_York', flag: 'üá∫üá∏' },
  { city: '–õ–æ—Å-–ê–Ω–¥–∂–µ–ª–µ—Å', country: '–°–®–ê', timezone: 'America/Los_Angeles', flag: 'üá∫üá∏' },
  { city: '–ß–∏–∫–∞–≥–æ', country: '–°–®–ê', timezone: 'America/Chicago', flag: 'üá∫üá∏' },
  { city: '–¢–æ—Ä–æ–Ω—Ç–æ', country: '–ö–∞–Ω–∞–¥–∞', timezone: 'America/Toronto', flag: 'üá®üá¶' },
  { city: '–ú–µ—Ö–∏–∫–æ', country: '–ú–µ–∫—Å–∏–∫–∞', timezone: 'America/Mexico_City', flag: 'üá≤üáΩ' },
  { city: '–°–∞–Ω-–ü–∞—É–ª—É', country: '–ë—Ä–∞–∑–∏–ª–∏—è', timezone: 'America/Sao_Paulo', flag: 'üáßüá∑' },
  { city: '–ë—É—ç–Ω–æ—Å-–ê–π—Ä–µ—Å', country: '–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞', timezone: 'America/Argentina/Buenos_Aires', flag: 'üá¶üá∑' },
  { city: '–õ–∏–º–∞', country: '–ü–µ—Ä—É', timezone: 'America/Lima', flag: 'üáµüá™' },
  { city: '–ë–æ–≥–æ—Ç–∞', country: '–ö–æ–ª—É–º–±–∏—è', timezone: 'America/Bogota', flag: 'üá®üá¥' },
  { city: '–ö–∞—Ä–∞–∫–∞—Å', country: '–í–µ–Ω–µ—Å—É—ç–ª–∞', timezone: 'America/Caracas', flag: 'üáªüá™' },
  
  // Africa & Oceania
  { city: '–ö–∞–∏—Ä', country: '–ï–≥–∏–ø–µ—Ç', timezone: 'Africa/Cairo', flag: 'üá™üá¨' },
  { city: '–ö–µ–π–ø—Ç–∞—É–Ω', country: '–Æ–ê–†', timezone: 'Africa/Johannesburg', flag: 'üáøüá¶' },
  { city: '–ù–∞–π—Ä–æ–±–∏', country: '–ö–µ–Ω–∏—è', timezone: 'Africa/Nairobi', flag: 'üá∞üá™' },
  { city: '–õ–∞–≥–æ—Å', country: '–ù–∏–≥–µ—Ä–∏—è', timezone: 'Africa/Lagos', flag: 'üá≥üá¨' },
  { city: '–°–∏–¥–Ω–µ–π', country: '–ê–≤—Å—Ç—Ä–∞–ª–∏—è', timezone: 'Australia/Sydney', flag: 'üá¶üá∫' },
  { city: '–ú–µ–ª—å–±—É—Ä–Ω', country: '–ê–≤—Å—Ç—Ä–∞–ª–∏—è', timezone: 'Australia/Melbourne', flag: 'üá¶üá∫' },
  { city: '–û–∫–ª–µ–Ω–¥', country: '–ù–æ–≤–∞—è –ó–µ–ª–∞–Ω–¥–∏—è', timezone: 'Pacific/Auckland', flag: 'üá≥üáø' },
];

export const WorldClock = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [currentTime, setCurrentTime] = useState(new Date());

  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentTime(new Date());
    }, 1000);

    return () => clearInterval(timer);
  }, []);

  const filteredCities = WORLD_CITIES.filter(
    city =>
      city.city.toLowerCase().includes(searchTerm.toLowerCase()) ||
      city.country.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className="min-h-screen bg-gradient-primary p-6">
      <div className="max-w-7xl mx-auto">
        <header className="text-center mb-12">
          <h1 className="text-5xl font-bold text-primary mb-4 drop-shadow-glow">
            üåç –ú–∏—Ä–æ–≤–æ–µ –í—Ä–µ–º—è
          </h1>
          <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
            –¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –≤ —Å—Ç–æ–ª–∏—Ü–∞—Ö –∏ –∫—Ä—É–ø–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö –º–∏—Ä–∞. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –≤—Ä–µ–º–µ–Ω–µ–º –≤ –ª—é–±–æ–π —Ç–æ—á–∫–µ –ø–ª–∞–Ω–µ—Ç—ã.
          </p>
        </header>

        <SearchBar searchTerm={searchTerm} onSearchChange={setSearchTerm} />

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mt-8">
          {filteredCities.map((city) => (
            <TimeCard
              key={`${city.city}-${city.timezone}`}
              city={city}
              currentTime={currentTime}
            />
          ))}
        </div>

        {filteredCities.length === 0 && (
          <div className="text-center py-12">
            <p className="text-muted-foreground text-lg">
              –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å.
            </p>
          </div>
        )}
      </div>
    </div>
  );
};